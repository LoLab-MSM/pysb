name: build
on: [push]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      max-parallel: 4
      matrix:
        os: [windows-latest]
        python-version: [3.6, 3.7, 3.8]

    steps:
    - uses: actions/checkout@master
    - name: Setup conda
      uses: conda-incubator/setup-miniconda@v2
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
  # Installing dependencies in macos and ubuntu
    - name: Install dependencies for macos and ubuntu
      shell: bash -l {0}
      if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
      run: |
        conda install --yes -c conda-forge numpy scipy matplotlib sympy nose \
        h5py pexpect pandas networkx pydot codecov mock cython twine
    - name: Install BioNetGen, Kappa, StochKit and Atomizer in macos and ubuntu
      shell: bash -l {0}
      if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
      run: |
        conda install --yes -c alubbock kappa stochkit bionetgen atomizer
  # Installing extra dependencies for all OS
    - name: Install extra dependencies for python 3.7 and 3.6 in macos, ubuntu and windows
      shell: bash -l {0}
      if : matrix.python-version == 3.6 || matrix.python-version == 3.7
      run: |
        conda install --yes -c SBMLTeam python-libsbml
        pip install libroadrunner
    - name: Install extra dependencies for python 3.8 in macos, ubuntu and windows
      shell: bash -l {0}
      if : matrix.python-version == 3.8
      run: |
        pip install python-libsbml
  # Installing dependencies in windows
    - name: Install dependencies for windows
      shell: bash -l {0}
      if: matrix.os == 'windows-latest'
      run: |
        conda install -c conda-forge "numpy>=1.14" scipy matplotlib sympy \
        networkx nose h5py pandas mkl pydot mock cython twine codecov psutil
        conda install -c alubbock graphviz bionetgen atomizer kappa stochkit-lite
    - name: Install pysb
      shell: bash -l {0}
      run: |
        python setup.py build --build-lib=build/lib
        python setup.py sdist && twine check dist/*
#    - name: Setup tmate session
#      uses: mxschmitt/action-tmate@v3
    - name: Test pysb
      shell: bash -l {0}
      run: |
        nosetests build/lib/pysb/tests/test_importers.py --with-coverage --cover-inclusive --cover-xml --cover-package=build/lib/pysb/tests/test_importers.py  -a '!gpu'
    - uses: codecov/codecov-action@v1
      with:
        verbose: true # optional (default = false)